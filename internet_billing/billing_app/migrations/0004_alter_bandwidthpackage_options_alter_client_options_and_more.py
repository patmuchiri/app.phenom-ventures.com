# Generated by Django 5.1.7 on 2025-04-23 19:44

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('billing_app', '0003_remove_userprofile_date_of_birth_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='bandwidthpackage',
            options={'ordering': ['-priority', 'name'], 'permissions': [('manage_bandwidthpackage', 'Can manage bandwidth packages')]},
        ),
        migrations.AlterModelOptions(
            name='client',
            options={'ordering': ['name'], 'permissions': [('view_active_client', 'Can view active clients'), ('deactivate_client', 'Can deactivate clients'), ('activate_client', 'Can activate clients')], 'verbose_name': 'Client', 'verbose_name_plural': 'Clients'},
        ),
        migrations.AlterModelOptions(
            name='clientsubscription',
            options={'ordering': ['-start_date'], 'permissions': [('manage_subscription', 'Can manage client subscriptions')]},
        ),
        migrations.AlterModelOptions(
            name='mikrotikrouter',
            options={'ordering': ['name'], 'permissions': [('sync_router', 'Can sync router configuration'), ('manage_router', 'Can manage router settings')]},
        ),
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-payment_date'], 'permissions': [('verify_payment', 'Can verify payments'), ('process_bulk_payment', 'Can process bulk payments')], 'verbose_name': 'Payment', 'verbose_name_plural': 'Payments'},
        ),
        migrations.AlterModelOptions(
            name='systemconfig',
            options={'permissions': [('manage_config', 'Can manage system configuration')], 'verbose_name': 'System Configuration', 'verbose_name_plural': 'System Configurations'},
        ),
        migrations.AlterModelOptions(
            name='transaction',
            options={'ordering': ['-transaction_date'], 'permissions': [('approve_transaction', 'Can approve transactions'), ('reverse_transaction', 'Can reverse transactions')], 'verbose_name': 'Transaction', 'verbose_name_plural': 'Transactions'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['last_name', 'first_name'], 'permissions': [('view_dashboard', 'Can view dashboard'), ('manage_users', 'Can manage users'), ('view_client', 'Can view client information'), ('add_client', 'Can add new client'), ('change_client', 'Can modify client information'), ('delete_client', 'Can delete client'), ('view_payment', 'Can view payment records'), ('add_payment', 'Can record new payment'), ('confirm_payment', 'Can confirm payments'), ('view_transaction', 'Can view transaction history'), ('add_transaction', 'Can create new transaction'), ('send_client_email', 'Can send email to client'), ('send_client_sms', 'Can send SMS to client'), ('send_bulk_sms', 'Can send bulk SMS to clients'), ('manage_network', 'Can manage network devices')], 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AddField(
            model_name='client',
            name='account_balance',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='client',
            name='last_updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='client',
            name='last_updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clientsubscription',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='mikrotikrouter',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mikrotikrouter',
            name='sync_status',
            field=models.CharField(default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='mikrotikrouter',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='payment',
            name='verification_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='smslog',
            name='error_message',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='smslog',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transaction',
            name='approval_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions_approved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='transaction',
            name='requires_approval',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='client',
            name='contact',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid Kenyan phone number starting with +254, 254, 0, or 7 (e.g. +254712345678, 0712345678, 712345678)', regex='^(\\+?254|0)?[17]\\d{8}$')]),
        ),
        migrations.AlterField(
            model_name='client',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2023, 1, 1, 0, 0)),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='download_limit',
            field=models.CharField(default='10Mbps', help_text='Download speed limit', max_length=10),
        ),
        migrations.AlterField(
            model_name='client',
            name='upload_limit',
            field=models.CharField(default='10Mbps', help_text='Upload speed limit', max_length=10),
        ),
        migrations.AlterField(
            model_name='payment',
            name='confirmed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_confirmed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='smslog',
            name='recipient_number',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid Kenyan phone number starting with +254, 254, 0, or 7 (e.g. +254712345678, 0712345678, 712345678)', regex='^(\\+?254|0)?[17]\\d{8}$')]),
        ),
        migrations.AlterField(
            model_name='smslog',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='systemconfig',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='config_modified', to=settings.AUTH_USER_MODEL),
        ),
    ]
